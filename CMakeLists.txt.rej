diff a/CMakeLists.txt b/CMakeLists.txt	(rejected hunks)
@@ -26,9 +27,18 @@
 
 include_directories(${CMAKE_CURRENT_SOURCE_DIR}/middleware)
 include_directories(${CMAKE_CURRENT_SOURCE_DIR}/test/gstTestHarness)
-include_directories(${CMAKE_CURRENT_SOURCE_DIR}/externals)
-include_directories(${CMAKE_CURRENT_SOURCE_DIR}/externals/rdk)
+include_directories(${CMAKE_CURRENT_SOURCE_DIR}/middleware/externals)
+include_directories(${CMAKE_CURRENT_SOURCE_DIR}/middleware/externals/playersecmanager)
+include_directories(${CMAKE_CURRENT_SOURCE_DIR}/middleware/externals/rdk)
 include_directories(${CMAKE_CURRENT_SOURCE_DIR}/middleware/vendor)
+include_directories(${CMAKE_CURRENT_SOURCE_DIR}/middleware/baseConversion)
+include_directories(${CMAKE_CURRENT_SOURCE_DIR}/middleware/playerLogManager)
+include_directories(${CMAKE_CURRENT_SOURCE_DIR}/middleware/subtitle)
+include_directories(${CMAKE_CURRENT_SOURCE_DIR}/middleware/drm)
+include_directories(${CMAKE_CURRENT_SOURCE_DIR}/middleware/drm/aes)
+include_directories(${CMAKE_CURRENT_SOURCE_DIR}/middleware/drm/ocdm)
+include_directories(${CMAKE_CURRENT_SOURCE_DIR}/middleware/drm/helper)
+include_directories(${CMAKE_CURRENT_SOURCE_DIR}/middleware/subtec/subtecparser)
 
 if(APPLE)
     set(CMAKE_C_COMPILER "/usr/bin/cc")
@@ -80,11 +90,13 @@
 pkg_check_modules(UUID REQUIRED uuid)
 
 include(test/mocks/mocks.cmake NO_POLICY_SCOPE)
+
+add_subdirectory(middleware)
+
 if (CMAKE_INBUILT_AAMP_DEPENDENCIES)
 	message("Building aamp support libraries")
 	add_subdirectory(support/aampabr)
 	add_subdirectory(support/aampmetrics)
-	add_subdirectory(plugins/gst-plugins-rdk-aamp)
 endif()
 
 message("Adding tsb folder")
@@ -95,25 +107,6 @@
         PUBLIC_HEADER DESTINATION include
 )
 
-
-if (CMAKE_WPEFRAMEWORK_REQUIRED)
-    message("CMAKE_WPEFRAMEWORK_REQUIRED set")
-list(APPEND CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake/")
-find_package(WPEFramework REQUIRED)
-if (WPEFRAMEWORK_FOUND)
-    message("WPEFRAMEWORK_FOUND = ${WPEFRAMEWORK_FOUND}")
-    #include_directories(${CMAKE_CURRENT_SOURCE_DIR} PRIVATE ${WPEFRAMEWORK_INCLUDE_DIRS})
-    # Sets the include paths to Linux/includem. By making it a system include the headers won't report any errors ( effc++ )
-    include_directories(SYSTEM ${WPEFRAMEWORK_INCLUDE_DIRS})
-else()
-if (USE_THUNDER_R4)
-       message(FATAL_ERROR "WPEFrameworkCOM not found")
-else()
-    message(FATAL_ERROR "WPEFrameworkProtocols not found")
-endif()
-endif()
-endif()
-
 if(CMAKE_WPEWEBKIT_JSBINDINGS)
 	message("CMAKE_WPEWEBKIT_JSBINDINGS is set, Finding JavaScriptCore")
 	pkg_search_module(PC_WPE_WEBKIT wpe-webkit-deprecated-0.1 wpe-webkit-1.0 wpe-webkit-1.1)
@@ -177,55 +169,28 @@
 # Sets the include paths to Linux/includem. By making it a system include the headers won't report any errors ( effc++ )
 include_directories(SYSTEM ${LIBCJSON_INCLUDE_DIRS})
 
-set(LIBAAMP_HEADERS middleware/drm/DrmSystems.h
-					AampCacheHandler.h
+set(LIBAAMP_HEADERS AampCacheHandler.h
 					AampConfig.h
 					AampConstants.h
 					downloader/AampCurlStore.h
 					AampDefine.h
 					AampEvent.h
-					middleware/drm/DrmCallbacks.h
 					AampEventListener.h
 					AampEventManager.h
-					middleware/GstUtils.h
 					AampGrowableBuffer.h
 					AampJsonObject.h
-					middleware/closedcaptions/CCTrackInfo.h
-					middleware/drm/DrmJsonObject.h
 					AampLogManager.h
 					AampMediaType.h
-					AampMemoryUtils.h
 					AampProfiler.h
-					externals/PlayerRfc.h
 					AampScheduler.h
 					AampUtils.h
-					middleware/PlayerUtils.h
-					middleware/PlayerMetadata.hpp
-					middleware/closedcaptions/PlayerCCManager.h
 					AdManagerBase.h
 					MediaStreamContext.h
 					StreamAbstractionAAMP.h
-					_base64.h
-					middleware/vendor/SocInterface.h
-					middleware/vendor/amlogic/AmlogicSocInterface.h
-					middleware/vendor/realtek/RealtekSocInterface.h
-					middleware/vendor/brcm/BrcmSocInterface.h
-					middleware/vendor/default/DefaultSocInterface.h
-					middleware/drm/base64.h
-					middleware/PlayerUtils.h
-					middleware/PlayerLogManager.h
-					middleware/PlayerScheduler.h
-					middleware/gstplayertaskpool.h
-					middleware/GstHandlerControl.h
-					middleware/GstUtils.h
-					middleware/InterfacePlayerRDK.h
-					externals/PlayerIarmRfcInterface.h
-					middleware/SocUtils.h
 					drm/AampDRMLicManager.h
 					aampgstplayer.h
 					AampBufferControl.h
 					admanager_mpd.h
-					base16.h
 					compositein_shim.h
 					fragmentcollector_hls.h
 					fragmentcollector_mpd.h
@@ -374,13 +318,8 @@
 					AampTsbReader.cpp
 					scte35/AampSCTE35.cpp
 					AampTrackWorker.cpp
-					externals/PlayerThunderInterface.cpp
 )
 
-if (CMAKE_WPEFRAMEWORK_REQUIRED)
-	set(LIBAAMP_SOURCES ${LIBAAMP_SOURCES} externals/rdk/PlayerThunderAccess.cpp ThunderAccess.cpp externals/Module.cpp)
-endif()
-
 if (CMAKE_PLATFORM_UBUNTU OR CMAKE_SYSTEM_NAME STREQUAL Darwin )
   message("AAMP_SIMULATOR_BUILD set")
   set(LIBAAMP_DEFINES "${LIBAAMP_DEFINES} -DAAMP_SIMULATOR_BUILD=1")
@@ -389,33 +328,6 @@
   # uncomment below to build additional drm support in simulator
   # set(CMAKE_USE_OPENCDM_ADAPTER TRUE)
   # set(CMAKE_USE_OPENCDM_ADAPTER_MOCKS TRUE)
-  # set(CMAKE_USE_THUNDER_OCDM_API_0_2 TRUE)
-  # set(CMAKE_USE_SECCLIENT TRUE)
-  # set(CMAKE_USE_SECCLIENT_MOCKS TRUE)
-endif()
-
-if(CMAKE_SOC_PLATFORM_RPI)
-    message("CMAKE_SOC_PLATFORM_RPI set")
-    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DRPI=1")
-endif()
-
-if(CMAKE_USE_SECCLIENT)
-	if (CMAKE_USE_SECCLIENT_MOCKS)
-		set(LIBAAMP_HEADERS ${LIBAAMP_HEADERS} sec_client.h sec_security_datatype.h)
-		# copy_staging_header_file(sec_client.h)
-		# copy_staging_header_file(sec_security_datatype.h)
-		set(LIBAAMP_MOCK_SOURCES ${LIBAAMP_MOCK_SOURCES} test/mocks/secClientMocks.cpp)
-		set(LIBAAMP_MOCK_DEPENDS -lgmock -lgtest)
-	else()
-		set(SEC_CLIENT_LIB -lSecClient )
-	endif()
-endif()
-if(CMAKE_USE_SECMANAGER)
-	if (NOT CMAKE_WPEFRAMEWORK_REQUIRED)
-		message(FATAL_ERROR "CMAKE_USE_SECMANAGER set but CMAKE_WPEFRAMEWORK_REQUIRED not set")
-	else()
-		set(LIBAAMP_SOURCES ${LIBAAMP_SOURCES} drm/AampSecManager.cpp)
-	endif()
 endif()
 
 execute_process(COMMAND bash "-c" "${CMAKE_SOURCE_DIR}/buildinfo.sh" OUTPUT_STRIP_TRAILING_WHITESPACE OUTPUT_VARIABLE buildinfo)
@@ -568,108 +407,20 @@
 	endif()
 endif()
 
-if(CMAKE_USE_OPENCDM_ADAPTER)
-    message("Using OPEN CDM ADAPTER")
-    set(LIBAAMP_DEFINES "${LIBAAMP_DEFINES} -DUSE_OPENCDM_ADAPTER")
-    set(LIBAAMP_DRM_SOURCES "${LIBAAMP_DRM_SOURCES}"	middleware/drm/ocdm/opencdmsessionadapter.cpp
-    							middleware/drm/ocdm/OcdmBasicSessionAdapter.cpp
-							middleware/drm/ocdm/OcdmGstSessionAdapter.cpp
-    )
-
-    # For extracting SEI timecode
-    set(LIBAAMP_DEPENDS "${LIBAAMP_DEPENDS} -lgstvideo-1.0")
-
-    if(CMAKE_USE_OPENCDM_ADAPTER_MOCKS)
-        set(LIBAAMP_HEADERS ${LIBAAMP_HEADERS} open_cdm.h open_cdm_adapter.h)
-        # copy_staging_header_file(open_cdm.h)
-        # copy_staging_header_file(opencdmMocks.cpp)
-        set(LIBAAMP_MOCK_SOURCES ${LIBAAMP_MOCK_SOURCES} test/mocks/opencdmMocks.cpp)
-        set(LIBAAMP_MOCK_DEPENDS -lgmock -lgtest)
-    else()
-        set(LIBAAMP_DEPENDS "${LIBAAMP_DEPENDS} -locdm")
-    endif()
-    find_path (STAGING_INCDIR opencdm)
-    include_directories(${STAGING_INCDIR}/opencdm)
-    find_path (STAGING_INCDIR gstreamer-1.0)
-    include_directories(${STAGING_INCDIR}/gstreamer-1.0)
-endif()
-
-set(LIBAAMP_SOURCES ${LIBAAMP_SOURCES} middleware/closedcaptions/PlayerCCManager.cpp middleware/PlayerUtils.cpp)
-
-set(LIBAAMP_SOURCES ${LIBAAMP_SOURCES} externals/PlayerRfc.cpp 
-externals/PlayerExternalUtils.cpp)
-if (CMAKE_AAMP_RFC_REQUIRED)
-        message("AAMP RFC set")
-        set(LIBAAMP_DEFINES "${LIBAAMP_DEFINES} -DAAMP_RFC_ENABLED")
-        if(CMAKE_USE_RFC_MOCKS)
-            copy_staging_header_file(tr181api.h)
-            set(LIBAAMP_MOCK_SOURCES ${LIBAAMP_MOCK_SOURCES} test/mocks/rfcMocks.cpp)
-            set(LIBAAMP_MOCK_DEPENDS -lgmock -lgtest)
-        else()
-            set(LIBAAMP_DEPENDS "${LIBAAMP_DEPENDS} -ltr181api")
-        endif()
-endif()
-
-set(AAMP_SUBTEC_CLASS_SOURCES middleware/playerisobmff/playerisobmffbox.cpp middleware/playerisobmff/playerisobmffbuffer.cpp middleware/subtec/subtecparser/WebVttSubtecParser.cpp middleware/subtec/subtecparser/TtmlSubtecParser.cpp middleware/subtec/subtecparser/WebvttSubtecDevInterface.cpp subtec/subtecparser/WebvttSubtecDevParser.cpp middleware/subtec/subtecparser/TextStyleAttributes.cpp middleware/playerjsonobject/PlayerJsonObject.cpp)
+set(AAMP_SUBTEC_CLASS_SOURCES subtec/subtecparser/WebvttSubtecDevParser.cpp)
 set(LIBAAMP_SOURCES ${LIBAAMP_SOURCES} ${AAMP_SUBTEC_CLASS_SOURCES})
-include_directories(middleware/subtec/subtecparser)
 include_directories(subtec/subtecparser)
-include_directories(middleware/playerjsonobject)
-
-add_library(subtec SHARED middleware/subtec/libsubtec/PacketSender.cpp middleware/subtec/libsubtec/SubtecChannel.cpp middleware/PlayerLogManager.cpp)
-set(AAMP_SUBTEC_PUBLIC_HEADERS middleware/subtec/libsubtec/SubtecChannel.hpp middleware/subtec/libsubtec/SubtecAttribute.hpp middleware/PlayerMetadata.hpp middleware/PlayerLogManager.h)
-set_target_properties(subtec PROPERTIES PUBLIC_HEADER "${AAMP_SUBTEC_PUBLIC_HEADERS}")
-set(AAMP_SUBTEC_COMPILE_FLAGS "${CMAKE_CXX_FLAGS} -DSUBTEC_PACKET_DEBUG=1")
-if(CMAKE_PLATFORM_UBUNTU)
-	set(AAMP_SUBTEC_COMPILE_FLAGS "${AAMP_SUBTEC_COMPILE_FLAGS} -DUBUNTU=1")
-endif()
-set_target_properties(subtec PROPERTIES COMPILE_FLAGS "${AAMP_SUBTEC_COMPILE_FLAGS}")
-include_directories(middleware/subtec/libsubtec)
-install (TARGETS subtec
-		DESTINATION lib
-		PUBLIC_HEADER DESTINATION include
-)
-
-if (CMAKE_GST_SUBTEC_ENABLED)
-    set(CMAKE_SUBTITLE_SUPPORT TRUE)
-    message("CMAKE_GST_SUBTEC_ENABLED set")
-    set(LIBAAMP_DEFINES "${LIBAAMP_DEFINES} -DGST_SUBTEC_ENABLED")
-endif()
-
-if (CMAKE_SUBTITLE_SUPPORT)
-    message("CMAKE_SUBTITLE_SUPPORT set")
-    set(LIBAAMP_DEFINES "${LIBAAMP_DEFINES} -DSUBTITLE_SUPPORTED")
-    set(LIBSUBTECCONNECTOR_DEFINES "${LIBAAMP_DEFINES}")
-    find_path(STAGING_INCDIR closedcaption/ccDataReader.h)
-    include_directories(${STAGING_INCDIR}/closedcaption)
-    if (CMAKE_USE_CC_MANAGER_MOCKS)
-        set(LIBAAMP_MOCK_SOURCES ${LIBAAMP_MOCK_SOURCES} test/fakes/ccManagerFakes.cpp)
-    else()
-        set(LIBSUBTECCONNECTOR_DEPENDS pthread rdkCCReader subtec)
-    endif()
-
-    set(LIBSUBTECCONNECTOR_SOURCES  ${AAMP_SUBTEC_SOURCES}
-        middleware/closedcaptions/subtec/SubtecConnector.cpp
-        middleware/closedcaptions/subtec/CCDataController.cpp
-        middleware/PlayerLogManager.cpp)
-
-    add_library(subtec_connector SHARED ${LIBSUBTECCONNECTOR_SOURCES})
-    target_link_libraries(subtec_connector ${LIBSUBTECCONNECTOR_DEPENDS})
-    install(TARGETS subtec_connector DESTINATION lib)
-
-    set(LIBAAMP_SOURCES ${LIBAAMP_SOURCES} middleware/closedcaptions/subtec/PlayerSubtecCCManager.cpp)
-endif()
 
 set(LIBAAMP_DEFINES "${LIBAAMP_DEFINES} ${SEC_CONTENT_METADATA_ENABLED}")
 
-set(LIBAAMP_SOURCES "${LIBAAMP_SOURCES}" "${LIBAAMP_DRM_SOURCES}" "${LIBAAMP_MOCK_SOURCES}")
+set(LIBAAMP_SOURCES "${LIBAAMP_SOURCES}" "${LIBAAMP_MOCK_SOURCES}")
 
 if (COVERAGE_ENABLED)
     set(LIBAAMP_DEFINES "${LIBAAMP_DEFINES} --coverage")
     set(LIBAAMP_DEPENDS "${LIBAAMP_DEPENDS} --coverage")
 endif()
 
-add_library(aamp SHARED ${LIBAAMP_HEADERS} ${LIBAAMP_SOURCES} ${LIBAAMP_HELP_SOURCES})
+add_library(aamp SHARED ${LIBAAMP_HEADERS} ${LIBAAMP_SOURCES})
 add_executable(aamp-cli ${AAMP_CLI_HEADERS} ${AAMP_CLI_SOURCES})
 target_link_libraries(aamp-cli "-lreadline")
 # XCode schema target
@@ -833,24 +570,21 @@
 xcode_define_schema(gstTestHarness)
 
 install(TARGETS gstTestHarness DESTINATION bin)
-target_link_libraries(aamp-cli subtec tsb)
-target_link_libraries(aamp subtec tsb)
+target_link_libraries(aamp-cli tsb)
+target_link_libraries(aamp tsb)
+
 if (CMAKE_INBUILT_AAMP_DEPENDENCIES)
 	target_link_libraries(aamp abr metrics)
 endif()
-if (CMAKE_SUBTITLE_SUPPORT)
-	target_link_libraries(aamp subtec_connector)
-endif()
+target_link_libraries(aamp middleware playerfbinterface)
+target_link_libraries(aamp-cli middleware playerfbinterface)
 install(TARGETS aamp-cli DESTINATION bin)
 
 install(TARGETS aamp DESTINATION lib PUBLIC_HEADER DESTINATION include PRIVATE_HEADER DESTINATION include)
-install(FILES Accessibility.hpp AampEvent.h AampConfig.h AampCMCDCollector.h AampEventManager.h AampDefine.h AampEventListener.h middleware/drm/DrmMemorySystem.h middleware/drm/DrmSessionManager.h middleware/drm/DrmSystems.h AampMediaType.h
-	middleware/drm/DrmData.h middleware/drm/DrmInfo.h middleware/drm/DrmMediaFormat.h middleware/drm/DrmCallbacks.h AampLogManager.h
-	middleware/drm/DrmSession.h middleware/drm/ClearKeyDrmSession.h middleware/drm/DrmUtils.h middleware/drm/DrmSessionFactory.h middleware/drm/ocdm/opencdmsessionadapter.h middleware/PlayerUtils.h 
-  middleware/drm/helper/DrmHelper.h subtitle/vttCue.h AampUtils.h
-  AampMemoryUtils.h AampProfiler.h AampConstants.h middleware/drm/DrmConstants.h iso639map.h externals/PlayerRfc.h externals/PlayerBase64.h middleware/GstUtils.h AampGrowableBuffer.h
+install(FILES Accessibility.hpp AampEvent.h AampConfig.h AampCMCDCollector.h AampEventManager.h AampDefine.h AampEventListener.h AampMediaType.h
+	AampLogManager.h subtitle/vttCue.h AampUtils.h
+  AampProfiler.h AampConstants.h iso639map.h AampGrowableBuffer.h
   AampScheduler.h
-  drm/AampSecManager.h
   downloader/AampCurlStore.h
   downloader/AampCurlDownloader.h
   downloader/AampCurlDefine.h
@@ -865,16 +599,6 @@
   AampTSBSessionManager.h
   AampTsbReader.h
   tsb/api/TsbApi.h
-  middleware/closedcaptions/CCTrackInfo.h
-  middleware/PlayerLogManager.h
-  middleware/PlayerScheduler.h
-  middleware/gstplayertaskpool.h
-  middleware/GstHandlerControl.h
-  middleware/GstUtils.h
-  middleware/InterfacePlayerRDK.h
-  middleware/SocUtils.h
-  middleware/closedcaptions/PlayerCCManager.h
-  middleware/PlayerUtils.h
   DESTINATION include)
 
 
